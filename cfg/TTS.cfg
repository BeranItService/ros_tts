#!/usr/bin/env python
PACKAGE = 'ros_tts'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# param: name, paramtype, level, description, default, mix, max, edit_method
gen.add("enable", bool_t, 0, "Enable TTS", True)
gen.add("lipsync_enabled", bool_t, 0, "Enable Lipsync", True)
gen.add("lipsync_blender", bool_t, 0, "Do Blender Lipsync", False)
gen.add("execute_marker", bool_t, 0, "Execute markers in text", True)

#emotiongp = gen.add_group("Emotion", state = True)
#emotiongp.add("emo_enabled", bool_t, 0, "Enable emotion in tts", False)
gen.add("tts_delay", double_t, 0, "Audio delay", 0.1, 0.0, 2.0)
gen.add("wait_for_tts_ready", bool_t, 0, "Wait for TTS Ready Message", False)
gen.add("tts_params_enabled", bool_t, 0, "Enable TTS parameters", False)
gen.add("tts_params_json", str_t, 0, "TTS parameters in JSON format", "")

gen.add("emo_enabled", bool_t, 0, "Enable emotion in tts", False)
emotion_enum = gen.enum([
        gen.const("Happy", str_t, "happy", ""),
        gen.const("HappyTensed", str_t, "happy_tensed", ""),
        gen.const("Sad", str_t, "sad", ""),
        gen.const("Afraid", str_t, "afraid", ""),
    ], "Emotions")

# param: name, paramtype, level, description, default, mix, max, edit_method
gen.add("emotion", str_t, 0, "Emotions", "happy", edit_method=emotion_enum)
gen.add("chunk_size", int_t, 0, "Chunk Size", 1024, 128, 4096)
gen.add("semitones", double_t, 0, "The number of semitones to shift", 1.0, -10.0, 10.0)
gen.add("cutfreq", double_t, 0, "The filter's cutoff frequency in Hz", 4000.0, 100.0, 20000.0)
gen.add("gain", double_t, 0, "The gain at the Nyquist frequency", 3.0, -20, 20)
gen.add("qfactor", double_t, 0, "The filter's width as a Q-factor", 1.0, 0, 10.0)
gen.add("speed", double_t, 0, "Tremolo speed in Hz", 8.5, 1.0, 100.0)
gen.add("depth", double_t, 0, "Tremolo depth as a percentage of the total amplitude", 60, 0, 100)
gen.add("tempo", double_t, 0, "The ratio of new tempo to the old tempo", 1.0, 0.5, 2.0)
gen.add("intensity", double_t, 0, "Gain adjustment in decibels (dB)", 3.0, 0.0, 100.0)
gen.add("parameter_control", double_t, 0, "Parameter Control", 1.0, 0.5, 2.0)

gen.add("enable_peer_chatbot", bool_t, 0, "Enable Peer Chatbot (alpha)", False)
gen.add("peer_chatbot_url", str_t, 0, "Chatbot URL on the Peer (alpha)", "192.168.1.1:8000")

# package name, node name, config name
exit(gen.generate(PACKAGE, "tts", "TTS"))
